mutate(speed = hms2 - hh.mm.ss, as.integer(skgrd))
Match <- Match %>%
filter(teamid != 365 & sk == 1) %>%
mutate(row_id=row_number())
Data <- full_join(Float, Match, "row_id")
Data
Match <- Match %>%
filter(hteam == 365 | ateam == 365) %>%
select(teamid, hteam, ateam, sk, skty, skgrd, x1, y1, hh.mm.ss, hrot, arot, wonlost, hms2, strzn, attzone) %>%
mutate(speed = hms2 - hh.mm.ss, as.integer(skgrd))
Match <- Match %>%
filter(teamid != 365 & sk == 1) %>%
mutate(row_id=row_number())
Match <- Match %>%
filter(hteam == 365 | ateam == 365) %>%
select(teamid, hteam, ateam, sk, skty, skgrd, x1, y1, hh.mm.ss, hrot, arot, wonlost, hms2, strzn, attzone) %>%
mutate(speed = hms2 - hh.mm.ss, as.integer(skgrd))
Match
Match <- Match %>%
filter(hteam == 365 | ateam == 365) %>%
select(teamid, hteam, ateam, sk, skty, skgrd, x1, y1, hh.mm.ss, hrot, arot, wonlost, hms2, strzn, attzone) %>%
mutate(speed = hms2 - hh.mm.ss, skgrd = as.integer(skgrd))
Match
Match <- Match %>%
filter(hteam == 365 | ateam == 365) %>%
select(teamid, hteam, ateam, sk, skty, skgrd, x1, y1, hh.mm.ss, hrot, arot, wonlost, hms2, strzn, attzone) %>%
mutate(speed = hms2 - hh.mm.ss, skgrd = as.integer(skgrd))
Match
# Top teams conference only games
Match <- read.csv("/Users/eaa54/.ssh/top1teams_data.csv", header = TRUE)
Match <- Match %>%
filter(hteam == 365 | ateam == 365) %>%
select(teamid, hteam, ateam, sk, skty, skgrd, x1, y1, hh.mm.ss, hrot, arot, wonlost, hms2, strzn, attzone) %>%
mutate(speed = hms2 - hh.mm.ss, skgrd = as.integer(skgrd))
Match
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2)
Match_Receive
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2) %>%
select(teamid, sk, x1, y1)
Match_Receive
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2) %>%
select(teamid, sk, x1, y1, strzn)
Match_Receive
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2) %>%
select(teamid, sk, x1, y1, strzn)
Match_Receive
Data <- full_join(Float, Match, "row_id")
Data
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2) %>%
select(teamid, sk, x1, y1, strzn)
Match_Receive
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2 | teamid != 365 & sk == 1 & skgrd == 1) %>%
select(teamid, sk, x1, y1, strzn)
Match_Receive
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2 | teamid != 365 & sk == 1 & skgrd == 1) %>%
select(teamid, sk, x1, y1, strzn, skgrd)
Match_Receive
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2 | teamid != 365 & sk == 1 & skgrd == 1) %>%
select(teamid, sk, x1, y1, strzn, skgrd, pind4)
Match_Receive
Match <- Match %>%
filter(hteam == 365 | ateam == 365) %>%
select(teamid, hteam, ateam, sk, skty, skgrd, x1, y1, hh.mm.ss, hrot, arot, wonlost, hms2, strzn, attzone, pind4) %>%
mutate(speed = hms2 - hh.mm.ss, skgrd = as.integer(skgrd))
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2 | teamid != 365 & sk == 1 & skgrd == 1) %>%
select(teamid, sk, x1, y1, strzn, skgrd, pind4)
## This creates the dataset that will be used for analytics
library(readxl)
library(dplyr)
# Hand-collected float data
Float <- read_excel("/Users/eaa54/Documents/FloatData.xlsx")
Float <- Float %>%
mutate(row_id=row_number(), Float = as.integer(Float)) #add row number as col to join
# Top teams conference only games
Match <- read.csv("/Users/eaa54/.ssh/top1teams_data.csv", header = TRUE)
Match <- Match %>%
filter(hteam == 365 | ateam == 365) %>%
select(teamid, hteam, ateam, sk, skty, skgrd, x1, y1, hh.mm.ss, hrot, arot, wonlost, hms2, strzn, attzone, pind4) %>%
mutate(speed = hms2 - hh.mm.ss, skgrd = as.integer(skgrd))
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2 | teamid != 365 & sk == 1 & skgrd == 1) %>%
select(teamid, sk, x1, y1, strzn, skgrd, pind4)
Match_Receive
Set_Location <- Match %>%
filter(teamid == 365 & sk == 3 | teamid != 365 & sk == 1 & skgrd == 1) %>%
select(teamid, sk, x1, y1, strzn)
Set_Location
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2 | teamid != 365 & sk == 1 & skgrd == 1) %>%
select(teamid, sk, x1, y1, strzn, skgrd, pind4) %>%
mutate(row_id = row_number())
Match <- Match %>%
filter(teamid != 365 & sk == 1) %>%
mutate(row_id=row_number())
Data <- full_join(Float, Match, "row_id")
Data <- full_join(Data, Match_Receive, "row_id")
Data
# ANOVA looking at Float vs. No Float with 4pt pass grade as response
Float_NoFloat <- aov(pind4 ~ Floar, data = Data)
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2 | teamid != 365 & sk == 1 & skgrd == 1) %>%
select(teamid, sk, x1, y1, strzn, skgrd, pind4) %>%
mutate(row_id = row_number())
Match_Receive
Match <- Match %>%
filter(teamid != 365 & sk == 1) %>%
mutate(row_id=row_number())
Data <- full_join(Float, Match, "row_id")
Data <- full_join(Data, Match_Receive, "row_id")
Data
# ANOVA looking at Float vs. No Float with 4pt pass grade as response
Float_NoFloat <- aov(pind4 ~ Floar, data = Data)
# ANOVA looking at Float vs. No Float with 4pt pass grade as response
Float_NoFloat <- aov(pind4.y ~ Floar, data = Data)
# ANOVA looking at Float vs. No Float with 4pt pass grade as response
Float_NoFloat <- aov(pind4.y ~ Float, data = Data)
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2 | teamid != 365 & sk == 1 & skgrd == 1) %>%
select(teamid, pind4) %>%
mutate(row_id = row_number())
Match_Receive
Match <- Match %>%
filter(teamid != 365 & sk == 1) %>%
mutate(row_id=row_number())
Data <- full_join(Float, Match, "row_id")
Data <- full_join(Data, Match_Receive, "row_id")
Data
Match <- Match %>%
filter(hteam == 365 | ateam == 365) %>%
select(teamid, hteam, ateam, sk, skty, skgrd, x1, y1, hh.mm.ss, hrot, arot, wonlost, hms2, strzn, attzone) %>%
mutate(speed = hms2 - hh.mm.ss, skgrd = as.integer(skgrd))
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2 | teamid != 365 & sk == 1 & skgrd == 1) %>%
select(teamid, pind4) %>%
mutate(row_id = row_number())
Match_Receive
Match <- Match %>%
filter(teamid != 365 & sk == 1) %>%
mutate(row_id=row_number())
Data <- full_join(Float, Match, "row_id")
Data <- full_join(Data, Match_Receive, "row_id")
Data
Match_Receive
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2 | teamid != 365 & sk == 1 & skgrd == 1) %>%
select(pind4) %>%
mutate(row_id = row_number())
Match_Receive
Match <- Match %>%
filter(hteam == 365 | ateam == 365) %>%
select(hteam, ateam, sk, skty, skgrd, x1, y1, hh.mm.ss, hrot, arot, wonlost, hms2, strzn, attzone) %>%
mutate(speed = hms2 - hh.mm.ss, skgrd = as.integer(skgrd))
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2 | teamid != 365 & sk == 1 & skgrd == 1) %>%
select(pind4) %>%
mutate(row_id = row_number())
Match <- Match %>%
filter(teamid != 365 & sk == 1) %>%
mutate(row_id=row_number())
Data <- full_join(Float, Match, "row_id")
Data <- full_join(Data, Match_Receive, "row_id")
Data
Match <- Match %>%
filter(hteam == 365 | ateam == 365) %>%
select(teamid, hteam, ateam, sk, skty, skgrd, x1, y1, hh.mm.ss, hrot, arot, wonlost, hms2, strzn, attzone) %>%
mutate(speed = hms2 - hh.mm.ss, skgrd = as.integer(skgrd))
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2 | teamid != 365 & sk == 1 & skgrd == 1) %>%
select(pind4) %>%
mutate(row_id = row_number())
Match_Receive
Match <- Match %>%
filter(teamid != 365 & sk == 1) %>%
mutate(row_id=row_number())
Data <- full_join(Float, Match, "row_id")
Data <- full_join(Data, Match_Receive, "row_id")
Data
Match <- Match %>%
filter(hteam == 365 | ateam == 365) %>%
select(teamid, sk, skty, skgrd, x1, y1, hh.mm.ss, hrot, arot, wonlost, hms2, strzn, attzone) %>%
mutate(speed = hms2 - hh.mm.ss, skgrd = as.integer(skgrd))
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2 | teamid != 365 & sk == 1 & skgrd == 1) %>%
select(pind4) %>%
mutate(row_id = row_number())
Match_Receive
Match <- Match %>%
filter(teamid != 365 & sk == 1) %>%
mutate(row_id=row_number())
Data <- full_join(Float, Match, "row_id")
Data <- full_join(Data, Match_Receive, "row_id")
Data
print(Data)
Float
# Hand-collected float data - Will need to change sheet to all data
Float <- read_excel("/Users/eaa54/Documents/FloatData.xlsx")
Float <- Float %>%
mutate(row_id=row_number()) %>% #add row number as col to join
select(Float, 'Server Location', 'Passter Location', Missed, row_id)
Float <- Float %>%
mutate(row_id=row_number()) %>% #add row number as col to join
select(Float, 'Server Location', 'Passer Location', Missed, row_id)
Float
# Top teams conference only games - Will need to change this
Match <- read.csv("/Users/eaa54/.ssh/top1teams_data.csv", header = TRUE)
Match <- Match %>%
filter(hteam == 365 | ateam == 365) %>%
select(teamid, sk, skty, skgrd, x1, y1, hh.mm.ss, hrot, arot, wonlost, hms2) %>%
mutate(speed = hms2 - hh.mm.ss, skgrd = as.integer(skgrd))
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2 | teamid != 365 & sk == 1 & skgrd == 1) %>%
select(pind4) %>%
mutate(row_id = row_number())
Match_Receive
Match <- Match %>%
filter(teamid != 365 & sk == 1) %>%
mutate(row_id=row_number())
Data <- full_join(Float, Match, "row_id")
Data <- full_join(Data, Match_Receive, "row_id")
Data
# ANOVA looking at Float vs. No Float with 4pt pass grade as response
Float_NoFloat <- aov(pind4 ~ Float, data = Data)
## This creates the dataset that will be used for analytics
library(readxl)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(tidyverse)
library(broom)
library(AICcmodavg)
install.packages(c("ggplot2", "ggpubr", "tidyverse", "broom", "AICcmodavg"))
install.packages(c("ggplot2", "ggpubr", "tidyverse", "broom", "AICcmodavg"))
## This creates the dataset that will be used for analytics
library(readxl)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(tidyverse)
library(broom)
library(ggplot2)
library(tidyverse)
# ANOVA looking at Float vs. No Float with 4pt pass grade as response
Float_NoFloat <- aov(pind4 ~ Float, Data)
summary(one.way)
Data
# Hand-collected float data - Will need to change sheet to all data
Float <- read_excel("/Users/eaa54/Documents/FloatData.xlsx")
Float <- Float %>%
mutate(row_id=row_number()) %>% #add row number as col to join
select(Float, 'Server Location', 'Passer Location', Missed, row_id)
# Top teams conference only games - Will need to change this
Match <- read.csv("/Users/eaa54/.ssh/top1teams_data.csv", header = TRUE)
Match <- Match %>%
filter(hteam == 365 | ateam == 365) %>%
select(teamid, sk, skty, skgrd, x1, y1, hh.mm.ss, hrot, arot, wonlost, hms2) %>%
mutate(speed = hms2 - hh.mm.ss, skgrd = as.integer(skgrd))
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2 | teamid != 365 & sk == 1 & skgrd == 1) %>%
select(pind4) %>%
mutate(row_id = row_number())
Match_Receive
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2 | teamid != 365 & sk == 1 & skgrd == 1) %>%
select(pind4) %>%
mutate(row_id = row_number())
Match_Receive
Match <- Match %>%
filter(hteam == 365 | ateam == 365) %>%
select(teamid, sk, skty, skgrd, x1, y1, hh.mm.ss, hrot, arot, wonlost, hms2, pind4) %>%
mutate(speed = hms2 - hh.mm.ss, skgrd = as.integer(skgrd))
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2 | teamid != 365 & sk == 1 & skgrd == 1) %>%
select(pind4) %>%
mutate(row_id = row_number())
# Top teams conference only games - Will need to change this
Match <- read.csv("/Users/eaa54/.ssh/top1teams_data.csv", header = TRUE)
Match <- Match %>%
filter(hteam == 365 | ateam == 365) %>%
select(teamid, sk, skty, skgrd, x1, y1, hh.mm.ss, hrot, arot, wonlost, hms2, pind4) %>%
mutate(speed = hms2 - hh.mm.ss, skgrd = as.integer(skgrd))
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2 | teamid != 365 & sk == 1 & skgrd == 1) %>%
select(pind4) %>%
mutate(row_id = row_number())
Match_Receive
Match <- Match %>%
filter(teamid != 365 & sk == 1) %>%
mutate(row_id=row_number())
Data <- full_join(Float, Match, "row_id")
Data <- full_join(Data, Match_Receive, "row_id")
Data
Data %>%
filter(pind4 != "NA")
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2 | teamid != 365 & sk == 1 & skgrd == 1) %>%
select(pind4) %>%
mutate(row_id = row_number())
Match_Receive <- Match_Receive %>%
mutate_at("pind4", ~replace_na(.,"100"))
install.packages("tidyr")
library(tidyr)
# Hand-collected float data - Will need to change sheet to all data
Float <- read_excel("/Users/eaa54/Documents/FloatData.xlsx")
Float <- Float %>%
mutate(row_id=row_number()) %>% #add row number as col to join
select(Float, 'Server Location', 'Passer Location', Missed, row_id)
# Top teams conference only games - Will need to change this
Match <- read.csv("/Users/eaa54/.ssh/top1teams_data.csv", header = TRUE)
Match <- Match %>%
filter(hteam == 365 | ateam == 365) %>%
select(teamid, sk, skty, skgrd, x1, y1, hh.mm.ss, hrot, arot, wonlost, hms2, pind4) %>%
mutate(speed = hms2 - hh.mm.ss, skgrd = as.integer(skgrd))
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2 | teamid != 365 & sk == 1 & skgrd == 1) %>%
select(pind4) %>%
mutate(row_id = row_number())
Match_Receive <- Match_Receive %>%
mutate_at("pind4", ~replace_na(.,"100"))
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2 | teamid != 365 & sk == 1 & skgrd == 1) %>%
select(pind4) %>%
mutate(row_id = row_number())
# Replace NA values in pind4 (missed serves) with something so can filter out later
Match_Receive[is.na(Match_Receive)] <- "100"
Match <- Match %>%
filter(teamid != 365 & sk == 1) %>%
mutate(row_id=row_number())
Data <- full_join(Float, Match, "row_id")
Data <- full_join(Data, Match_Receive, "row_id")
Data %>%
filter(pind4 != 100)
Match_Receive
Float
Float_Receive <- full_join(Float, Match_Receive, by = row_id)
Float_Receive <- full_join(Float, Match_Receive, by = "row_id")
Float_Receive
Data <- full_join(Float_Receive, Match, "row_id")
Data
Data <- full_join(Float_Receive, Match, "row_id")
Data <- Data %>%
select(Float, "Server Location", "Passer Location", Missed, row_id, pind4.x,
teamid, sk, skty, skgrd, x1, y1, hrot, arot, wonlost, speed)
Data
Data <- Data %>%
filter(mised == 0) %>%
select(Float, "Server Location", "Passer Location", Missed, row_id, pind4.x,
teamid, sk, skty, skgrd, x1, y1, hrot, arot, wonlost, speed)
Data <- full_join(Float_Receive, Match, "row_id")
Data <- Data %>%
filter(missed == 0) %>%
select(Float, "Server Location", "Passer Location", Missed, row_id, pind4.x,
teamid, sk, skty, skgrd, x1, y1, hrot, arot, wonlost, speed)
Data
# ANOVA looking at Float vs. No Float with 4pt pass grade as response
Float_NoFloat <- aov(pind4 ~ Float, Data)
# ANOVA looking at Float vs. No Float with 4pt pass grade as response
Float_NoFloat <- aov(pind4.x ~ Float, Data)
summary(one.way)
summary(Float_NoFloat)
# ANOVA looking at Float vs. No Float with 4pt pass grade as response
Float_NoFloat <- aov(pind4.x ~ -1 + Float, Data)
summary(Float_NoFloat)
DoesZoneMatter <- aov(pind4.x ~ -1 + "Server Location")
Data <- Data %>%
rename("Server Location" = "sloc",
"Passer Location" = "ploc",
"pind4.x" = "pind4")
Data <- Data %>%
rename("sloc" = "Server Location",
"ploc" = "Passer Location",
"pind4" = "pind4.x")
DoesZoneMatter <- aov(pind4.x ~ -1 + "Server Location")
DoesZoneMatter <- aov(pind4.x ~ -1 + sloc)
DoesZoneMatter <- aov(pind4 ~ -1 + sloc)
Data <- full_join(Float_Receive, Match, "row_id")
Data <- Data %>%
filter(missed == 0) %>%
select(Float, "Server Location", "Passer Location", Missed, row_id, pind4.x,
teamid, sk, skty, skgrd, x1, y1, hrot, arot, wonlost, speed)
Data <- Data %>%
rename("sloc" = "Server Location",
"ploc" = "Passer Location",
"pind4" = "pind4.x")
Match <- Match %>%
filter(teamid != 365 & sk == 1) %>%
mutate(row_id=row_number())
Data <- full_join(Float_Receive, Match, "row_id")
Data <- Data %>%
filter(missed == 0) %>%
select(Float, "Server Location", "Passer Location", Missed, row_id, pind4.x,
teamid, sk, skty, skgrd, x1, y1, hrot, arot, wonlost, speed)
Data <- Data %>%
rename("sloc" = "Server Location",
"ploc" = "Passer Location",
"pind4" = "pind4.x")
# Hand-collected float data - Will need to change sheet to all data
Float <- read_excel("/Users/eaa54/Documents/FloatData.xlsx")
Float <- Float %>%
mutate(row_id=row_number()) %>% #add row number as col to join
select(Float, 'Server Location', 'Passer Location', Missed, row_id)
# Top teams conference only games - Will need to change this
Match <- read.csv("/Users/eaa54/.ssh/top1teams_data.csv", header = TRUE)
Match <- Match %>%
filter(hteam == 365 | ateam == 365) %>%
select(teamid, sk, skty, skgrd, x1, y1, hh.mm.ss, hrot, arot, wonlost, hms2, pind4) %>%
mutate(speed = hms2 - hh.mm.ss, skgrd = as.integer(skgrd))
Match_Receive <- Match %>%
filter(teamid == 365 & sk == 2 | teamid != 365 & sk == 1 & skgrd == 1) %>%
select(pind4) %>%
mutate(row_id = row_number())
# Replace NA values in pind4 (missed serves) with something so can filter out later
Match_Receive[is.na(Match_Receive)] <- "100"
Float_Receive <- full_join(Float, Match_Receive, by = "row_id")
Match <- Match %>%
filter(teamid != 365 & sk == 1) %>%
mutate(row_id=row_number())
Data <- full_join(Float_Receive, Match, "row_id")
Data <- Data %>%
filter(missed == 0) %>%
select(Float, "Server Location", "Passer Location", Missed, row_id, pind4.x,
teamid, sk, skty, skgrd, x1, y1, hrot, arot, wonlost, speed)
Data <- Data %>%
rename("sloc" = "Server Location",
"ploc" = "Passer Location",
"pind4" = "pind4.x")
Data <- full_join(Float_Receive, Match, "row_id")
Data <- Data %>%
filter(Missed == 0) %>%
select(Float, "Server Location", "Passer Location", Missed, row_id, pind4.x,
teamid, sk, skty, skgrd, x1, y1, hrot, arot, wonlost, speed)
Data <- Data %>%
rename("sloc" = "Server Location",
"ploc" = "Passer Location",
"pind4" = "pind4.x")
# ANOVA looking at Float vs. No Float with 4pt pass grade as response
Float_NoFloat <- aov(pind4.x ~ -1 + Float, Data)
# ANOVA looking at Float vs. No Float with 4pt pass grade as response
Float_NoFloat <- aov(pind4 ~ -1 + Float, Data)
summary(Float_NoFloat)
DoesZoneMatter <- aov(pind4 ~ -1 + sloc)
# ANOVA looking at Float vs. No Float with 4pt pass grade as response
Float_NoFloat <- aov(pind4 ~ -1 + Float, Data)
DoesZoneMatter <- aov(pind4 ~ -1 + sloc)
DoesZoneMatter <- aov(pind4 ~ -1 + sloc)
DoesZoneMatter <- aov(pind4 ~ -1 + sloc)
DoesZoneMatter <- aov(pind4 ~ -1 + sloc)
DoesZoneMatter <- aov(pind4 ~ -1 + sloc, Data)
summary(DoesZoneMatter)
# Categorize cross court vs. straight on (sharp cross, shallow cross, and straight)
Data$direction[Data$sloc == Data$ploc] <- "sharp"
# Categorize cross court vs. straight on (sharp cross, shallow cross, and straight)
Data <- Data %>%
mutate(direction = 1)
Data$direction[Data$sloc == Data$ploc] <- "sharp"
Data
Data$direction
Data$direction[Data$sloc == 6 & Data$sloc != 6] <-"shallow"
Data&direction[Data$sloc == 5 & Data$ploc == 6 | Data$sloc == 7 & Data$ploc == 6] <- "shallow"
Data&direction[Data$sloc == 5 & Data$ploc == 6 | Data$sloc == 7 & Data$ploc == 6] <- "shallow"
Data&direction[Data$sloc == 5 & Data$ploc == 6 | Data$sloc == 7 & Data$ploc == 6] <- "shallow"
Data&direction[Data$sloc == 5 & Data$ploc == 6] <- "shallow"
Data$direction[Data$sloc == Data$ploc] <- "sharp"
Data$direction[Data$sloc == 6 & Data$ploc != 6] <- "shallow"
Data&direction[Data$sloc == 5 & Data$ploc == 6] <- "shallow"
Data$direction[Data$sloc == 7] <- 5
Data$direction[Data$sloc == 9] <- 9
Data$direction[Data$sloc == 9] <- 1
Data$direction[Data$sloc == 7] <- 5
Data$direction[Data$sloc == 9] <- 1
Data$direction[Data$sloc == Data$ploc] <- "sharp"
Data$direction[Data$sloc == 6 & Data$ploc == 6] <- "straight"
Data&direction[Data$sloc == 5 & Data$ploc == 6] <- "shallow"
Data&direction[Data$sloc == 5 & Data$ploc == 6] <- "shallow"
Data&direction[Data$sloc == 5 & Data$ploc == 6] <- "shallow"
Data&direction[Data$sloc == 5 & Data$ploc == 6] <- "shallow"
Data$direction[Data$sloc == 5 & Data$ploc == 6] <- "shallow"
Data$direction[Data$sloc == 6 & Data$ploc == 1 | Data$sloc == 6 & Data$ploc == 5] <- "shallow"
Data$direction[Data$sloc == 5 & Data$ploc == 6 |
Data$sloc == 1 & Data$ploc == 6 |
Data$sloc == 6 & Data$ploc == 1 |
Data$sloc == 6 & Data$ploc == 5] <- "shallow"
#ANOVA looking at direction with pass grade as response
Direction <- aov(pind4 ~ -1 + direction, Data)
summary(Direction)
summary(aov(pind4 ~ direction:Float, Data))
#Speed?
aov(pind4 ~ -1 + speed, Data)
#Speed?
summary(aov(pind4 ~ -1 + speed, Data))
#direction + Float
summary(aov(pind4 ~ direction + Float + direction:Float, Data))
#direction + Float
summary(aov(pind4 ~ direction + Float + + speed + direction:Float, Data))
#direction + Float
summary(aov(pind4 ~ direction + Float + + speed + direction:Float:speed, Data))
#direction + Float
summary(aov(pind4 ~ direction + Float + + speed, Data))
#direction + Float
summary(aov(pind4 ~ direction + Float + speed, Data))
#direction + Float
summary(aov(pind4 ~ Float + speed, Data))
#direction + Float
summary(aov(pind4 ~ Float + speed + Float:speed, Data))
